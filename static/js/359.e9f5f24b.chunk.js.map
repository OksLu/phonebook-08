{"version":3,"file":"static/js/359.e9f5f24b.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","webpack://react-homework-template/./src/pages/ContactsPage.module.css?7675","webpack://react-homework-template/./src/components/contactsList/ContactsList.module.css?908f","webpack://react-homework-template/./src/components/contactEl/Contact.module.css?fd07","components/contactEl/Contact.jsx","redux/contacts/selectors.js","components/contactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/filter/Filter.module.css?e85f","components/filter/Filter.jsx","webpack://react-homework-template/./src/components/contactsForm/ContactForm.module.css?2c8f","components/contactsForm/ContactsForm.jsx","pages/ContactsPage.js"],"sourcesContent":["import './Modal.css';\n\nexport const Modal = ({ children, closeModal }) => (\n  <div onClick={closeModal} className=\"overlay\">\n    <div className=\"modal\">{children}</div>\n  </div>\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactSection\":\"ContactsPage_contactSection__sUdC7\",\"modalBtn\":\"ContactsPage_modalBtn__-zGUI\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactsList_list__i2+2R\",\"item\":\"ContactsList_item__1JGnj\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__1ZM+m\",\"name\":\"Contact_name__fz64Z\",\"number\":\"Contact_number__cRWdN\",\"close\":\"Contact_close__y45kA\"};","import css from './Contact.module.css';\nimport PropTypes from 'prop-types';\nimport { CiUser, CiSquareRemove } from 'react-icons/ci';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactsApi';\n\nexport const Contact = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <div className={css.contact}>\n      <h3 className={css.name}>\n        <CiUser />\n        {name}\n      </h3>\n      <p className={css.number}>{phone}</p>\n      <CiSquareRemove className={css.close} onClick={handleDelete} />\n    </div>\n  );\n};\n\nContact.prototype = {\n  currentId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.isLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n\nexport const filteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts\n      .filter(({ name }) => name.toLowerCase().includes(filter))\n      .sort((a, b) => a.name.localeCompare(b.name));\n  }\n);\n","import css from './ContactsList.module.css';\nimport { Contact } from 'components/contactEl/Contact';\nimport {\n  filteredContacts,\n  getError,\n  getIsLoading,\n} from 'redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport { fetchContacts } from 'redux/contacts/contactsApi';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(filteredContacts);\n  const loading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.list}>\n      {loading && <Loader />}\n      {error && <div>{error}</div>}\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <>\n            <li key={id} className={css.item}>\n              <Contact id={id} name={name} phone={number} />\n            </li>\n          </>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterInput\":\"Filter_filterInput__e+SNN\",\"input\":\"Filter_input__R4e-B\",\"label\":\"Filter_label__IWv91\",\"wrapper\":\"Filter_wrapper__kfVHe\"};","import { CiSearch } from 'react-icons/ci';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\n\nimport { filterContacts } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(filterContacts(e.target.value));\n  };\n  return (\n    <div className={css.wrapper}>\n      <label htmlFor=\"filter\" className={css.label}>\n        <CiSearch className={css.searchIcon} /> Search\n      </label>\n      <input\n        id=\"filter\"\n        className={css.filterInput}\n        type=\"text\"\n        name=\"filter\"\n        autoComplete=\"off\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modalForm\":\"ContactForm_modalForm__uBjg8\",\"modalInput\":\"ContactForm_modalInput__eyl-V\",\"label\":\"ContactForm_label__2QOqy\",\"addBtn\":\"ContactForm_addBtn__CPSNS\"};","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsApi';\nimport { getContacts } from 'redux/contacts/selectors';\n\nexport const ContactsForm = ({ closeModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const newContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n    if (contacts.find(contact => contact.name === newContact.name)) {\n      alert('This contact already exist');\n    } else {\n      dispatch(addContact(newContact));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.modalForm} onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor=\"name\">\n        Name\n      </label>\n      <input\n        id=\"name\"\n        className={css.modalInput}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        autoComplete=\"off\"\n      />\n      <label className={css.label} htmlFor=\"number\">\n        Number\n      </label>\n      <input\n        id=\"number\"\n        className={css.modalInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        autoComplete=\"off\"\n      />\n      <button className={css.addBtn} type=\"submit\" onClick={closeModal}>\n        Add\n      </button>\n    </form>\n  );\n};\n","import { Modal } from 'components/Modal/Modal';\nimport css from './ContactsPage.module.css';\nimport { ContactsList } from 'components/contactsList/ContactsList';\nimport { Filter } from 'components/filter/Filter';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/auth/authSelector';\nimport { ContactsForm } from 'components/contactsForm/ContactsForm';\n\nconst Contacts = () => {\n  const userName = useSelector(selectUser);\n  const [showModal, setShowModal] = useState(false);\n  const openModal = () => {\n    setShowModal(true);\n  };\n  const closeModal = event => {\n    if (event.target.nodeName !== 'DIV' && event.target.nodeName !== 'BUTTON') {\n      return;\n    }\n    setShowModal(prevState => !prevState);\n  };\n  return (\n    <section className={css.contactSection}>\n      <h2>Hello, {userName.name}</h2>\n      <button type=\"button\" onClick={openModal} className={css.modalBtn}>\n        Add contact\n      </button>\n      {showModal && (\n        <Modal closeModal={closeModal} children={<ContactsForm />} />\n      )}\n\n      <Filter />\n      <h2>Contacts</h2>\n      <ContactsList />\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["Modal","children","closeModal","onClick","className","Contact","id","name","phone","dispatch","useDispatch","css","deleteContact","prototype","currentId","PropTypes","number","getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","filteredContacts","createSelector","filter","toLowerCase","includes","sort","a","b","localeCompare","ContactsList","useSelector","loading","useEffect","fetchContacts","Loader","map","Filter","htmlFor","type","autoComplete","onChange","e","filterContacts","target","value","ContactsForm","onSubmit","preventDefault","form","newContact","elements","find","contact","alert","addContact","reset","pattern","title","required","userName","selectUser","useState","showModal","setShowModal","event","nodeName","prevState"],"sourceRoot":""}